# Generated by Django 5.1.4 on 2025-09-29 14:27

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='削除フラグ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('username', models.CharField(max_length=50, verbose_name='ユーザー名')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='メールアドレス')),
                ('gender', models.CharField(blank=True, choices=[('0', '男性'), ('1', '女性'), ('2', 'その他')], max_length=1, null=True, verbose_name='性別')),
                ('tel_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='半角数字のみで入力してください', regex='^[0-9]+$')], verbose_name='電話番号')),
                ('postal_code', models.CharField(blank=True, max_length=7, null=True, validators=[django.core.validators.RegexValidator(message='半角数字7桁で入力してください', regex='^\\d{7}$')], verbose_name='郵便番号')),
                ('state', models.CharField(blank=True, max_length=5, null=True, verbose_name='都道府県')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='市区町村')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='住所')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='住所2')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='誕生日')),
                ('employment_status', models.CharField(choices=[('1', '在職中'), ('2', '休職中'), ('3', '退職済み')], default='1', max_length=1, verbose_name='雇用状態')),
                ('employment_end_date', models.DateField(blank=True, null=True, verbose_name='退職日')),
                ('privilege', models.CharField(choices=[('0', '特権'), ('1', '一般'), ('2', '参照'), ('3', 'ゲスト')], default='3', max_length=3, verbose_name='権限')),
                ('create_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creator', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
